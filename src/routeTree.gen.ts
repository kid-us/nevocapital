/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as InvestmentFundsRouteImport } from './routes/investment-funds'
import { Route as InvestWithUsRouteImport } from './routes/invest-with-us'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AbouteRouteImport } from './routes/aboute'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CompanyIndexRouteImport } from './routes/company/index'
import { Route as CompanyCompanyIdRouteImport } from './routes/company/$companyId'

const InvestmentFundsRoute = InvestmentFundsRouteImport.update({
  id: '/investment-funds',
  path: '/investment-funds',
  getParentRoute: () => rootRouteImport,
} as any)
const InvestWithUsRoute = InvestWithUsRouteImport.update({
  id: '/invest-with-us',
  path: '/invest-with-us',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AbouteRoute = AbouteRouteImport.update({
  id: '/aboute',
  path: '/aboute',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyIndexRoute = CompanyIndexRouteImport.update({
  id: '/company/',
  path: '/company/',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyCompanyIdRoute = CompanyCompanyIdRouteImport.update({
  id: '/company/$companyId',
  path: '/company/$companyId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/aboute': typeof AbouteRoute
  '/contact': typeof ContactRoute
  '/invest-with-us': typeof InvestWithUsRoute
  '/investment-funds': typeof InvestmentFundsRoute
  '/company/$companyId': typeof CompanyCompanyIdRoute
  '/company': typeof CompanyIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/aboute': typeof AbouteRoute
  '/contact': typeof ContactRoute
  '/invest-with-us': typeof InvestWithUsRoute
  '/investment-funds': typeof InvestmentFundsRoute
  '/company/$companyId': typeof CompanyCompanyIdRoute
  '/company': typeof CompanyIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/aboute': typeof AbouteRoute
  '/contact': typeof ContactRoute
  '/invest-with-us': typeof InvestWithUsRoute
  '/investment-funds': typeof InvestmentFundsRoute
  '/company/$companyId': typeof CompanyCompanyIdRoute
  '/company/': typeof CompanyIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/aboute'
    | '/contact'
    | '/invest-with-us'
    | '/investment-funds'
    | '/company/$companyId'
    | '/company'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/aboute'
    | '/contact'
    | '/invest-with-us'
    | '/investment-funds'
    | '/company/$companyId'
    | '/company'
  id:
    | '__root__'
    | '/'
    | '/aboute'
    | '/contact'
    | '/invest-with-us'
    | '/investment-funds'
    | '/company/$companyId'
    | '/company/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AbouteRoute: typeof AbouteRoute
  ContactRoute: typeof ContactRoute
  InvestWithUsRoute: typeof InvestWithUsRoute
  InvestmentFundsRoute: typeof InvestmentFundsRoute
  CompanyCompanyIdRoute: typeof CompanyCompanyIdRoute
  CompanyIndexRoute: typeof CompanyIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/investment-funds': {
      id: '/investment-funds'
      path: '/investment-funds'
      fullPath: '/investment-funds'
      preLoaderRoute: typeof InvestmentFundsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/invest-with-us': {
      id: '/invest-with-us'
      path: '/invest-with-us'
      fullPath: '/invest-with-us'
      preLoaderRoute: typeof InvestWithUsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aboute': {
      id: '/aboute'
      path: '/aboute'
      fullPath: '/aboute'
      preLoaderRoute: typeof AbouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company/': {
      id: '/company/'
      path: '/company'
      fullPath: '/company'
      preLoaderRoute: typeof CompanyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company/$companyId': {
      id: '/company/$companyId'
      path: '/company/$companyId'
      fullPath: '/company/$companyId'
      preLoaderRoute: typeof CompanyCompanyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AbouteRoute: AbouteRoute,
  ContactRoute: ContactRoute,
  InvestWithUsRoute: InvestWithUsRoute,
  InvestmentFundsRoute: InvestmentFundsRoute,
  CompanyCompanyIdRoute: CompanyCompanyIdRoute,
  CompanyIndexRoute: CompanyIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
